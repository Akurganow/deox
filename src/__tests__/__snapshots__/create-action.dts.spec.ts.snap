// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createAction createAction(
      '[Todo] fetch rejected',
      resolve => (error: Error, meta?: { status: number }) => resolve(error, meta)
    ) (type) should match snapshot: createAction createAction(
      '[Todo] fetch rejected',
      resolve => (error: Error, meta?: { status: number }) => resolve(error, meta)
    ) 1`] = `"((error: Error, meta?: { status: number; } | undefined) => { type: \\"[Todo] fetch rejected\\"; payload: Error; meta: { status: number; }; error: true; }) & { type: \\"[Todo] fetch rejected\\"; toString(): \\"[Todo] fetch rejected\\"; }"`;

exports[`createAction createAction('[Todo] add', resolve => (name: string, completed = false) =>
      resolve({ name, completed })
    ) (type) should match snapshot: createAction createAction('[Todo] add', resolve => (name: string, completed = false) =>
      resolve({ name, completed })
    ) 1`] = `"((name: string, completed?: any) => { type: \\"[Todo] add\\"; payload: { name: string; completed: any; }; }) & { type: \\"[Todo] add\\"; toString(): \\"[Todo] add\\"; }"`;

exports[`createAction createAction('[Todo] add', resolve => (name: string, completed = false) =>
      resolve({ name, completed }, 'Meta data of all todos')
    ) (type) should match snapshot: createAction createAction('[Todo] add', resolve => (name: string, completed = false) =>
      resolve({ name, completed }, 'Meta data of all todos')
    ) 1`] = `"((name: string, completed?: any) => { type: \\"[Todo] add\\"; payload: { name: string; completed: any; }; meta: string; }) & { type: \\"[Todo] add\\"; toString(): \\"[Todo] add\\"; }"`;

exports[`createAction createAction('[Todo] fetch rejected', resolve => (error: Error) =>
      resolve(error)
    ) (type) should match snapshot: createAction createAction('[Todo] fetch rejected', resolve => (error: Error) =>
      resolve(error)
    ) 1`] = `"((error: Error) => { type: \\"[Todo] fetch rejected\\"; payload: Error; error: true; }) & { type: \\"[Todo] fetch rejected\\"; toString(): \\"[Todo] fetch rejected\\"; }"`;

exports[`createAction createAction('[Todo] truncate') (type) should match snapshot: createAction createAction('[Todo] truncate') 1`] = `"(() => { type: \\"[Todo] truncate\\"; }) & { type: \\"[Todo] truncate\\"; toString(): \\"[Todo] truncate\\"; }"`;
